{"version":3,"sources":["layouts/Footer.js","layouts/Header.js","components/MainContext.js","components/Question.js","components/Form.js","components/Guest.js","components/Greetings.js","components/Info.js","components/Results.js","components/Settings.js","components/StartPage.js","layouts/Main.js","App.js","index.js"],"names":["Footer","react_default","a","createElement","dangerouslySetInnerHTML","__html","Header","MainContext","createContext","Question","_ref","currentAnswer","picture","updateAnswer","className","alt","src","onChange","event","typedText","target","value","type","placeholder","back","index_es","icon","faArrowAltCircleLeft","check","faCheckCircle","forward","faArrowAltCircleRight","Form","guests","useContext","_useState","useState","Array","length","fill","_useState2","Object","slicedToArray","answers","setAnswers","_useState3","_useState4","index","setIndex","backBtnRef","useRef","checkBtnRef","forwardBtnRef","history","useHistory","useEffect","current","classList","add","disabled","remove","components_Question","large","answer","currentAnswers","toConsumableArray","indexOf","onClick","prevValue","ref","push","pathname","state","Guest","num","numPeopleToGuess","person","time","name","animationVariable","animationDuration","concat","animationIterationCount","welcomeText","setWelcomeText","texts","Math","floor","random","randomWelcomeText","first","setTimeout","text","style","Greetings","props","_useContext","lapseOfTime","numOfPeopleToGuess","useParams","ordinalNum","setOrdinalNum","personToPresent","setPersonToPresent","fetch","then","response","ok","Error","json","data","provideDataForMainContext","results","catch","intervalId","setInterval","prevNum","clearInterval","components_Guest","Info","_props$location$state","location","handleBackBtn","handleCheckBtn","Fragment","configureButtons","badAnswersIcon","faFrownOpen","goodAnswersIcon","faGrin","tryAgain","faRedoAlt","Results","badAnswersScore","setBadAnswersScore","goodAnswersScore","setGoodAnswersScore","badAnswers","goodAnswers","map","guest","countScores","color","borderColor","key","medium","showResults","save","timer","faStopwatch","Settings","indicatorRef","mouseOver","stripRef","element","parentElement","rect","getBoundingClientRect","stripWidth","width","offsetX","clientX","left","provideTimeFromSettings","onMouseMove","settingsBtn","faCog","StartPage","setNumOfPeopleToGuess","easyBtnRef","mediumBtnRef","hardBtnRef","difficultyBtnRefList","undefined","chooseDifficulty","level","dataset","difficulty","forEach","btn","currentElem","data-difficulty","Main","mainContext","setMainContext","setTime","Provider","react_router","path","exact","component","render","components_Greetings","components_Settings","App","react_router_dom","basename","process","layouts_Header","layouts_Main","layouts_Footer","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f74b51a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p dangerouslySetInnerHTML={{ \"__html\": \"&copy; Paweł Woźniak\"}}/>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>Do you remember me?</h1>\n        </header>\n    )\n}\n\nexport default Header;","import { createContext } from 'react';\n\nexport const MainContext = createContext();","import React from 'react';\n\nimport '../styles/Question.css';\n\n\n\nconst Question = ({ currentAnswer, picture, updateAnswer }) => {\n\n    const handleOnChange = (event) => {\n        const typedText = event.target.value;\n        updateAnswer(typedText);\n    }\n\n    return (\n        <div className=\"question\">\n            <img alt=\"face\" src={picture} ></img>\n            <p>Your answer:</p>\n            <input onChange={handleOnChange} type=\"text\" value={currentAnswer} placeholder='type my name'/>\n        </div>\n    )\n}\n\nexport default Question;","import React, { useContext, useEffect, useState, useRef } from 'react';\nimport { MainContext } from './MainContext';\nimport { useHistory } from 'react-router';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft, faArrowAltCircleRight, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport Question from './Question';\n\nimport '../styles/Form.css';\n\nconst back = <FontAwesomeIcon icon={faArrowAltCircleLeft}/>\nconst check = <FontAwesomeIcon icon={faCheckCircle}/>\nconst forward = <FontAwesomeIcon icon={faArrowAltCircleRight}/>\n\nconst Form = () => {\n\n    const { guests } = useContext(MainContext);\n    const [answers, setAnswers] = useState(new Array(guests.length).fill(''));\n    const [index, setIndex] = useState(0);\n    const backBtnRef = useRef();\n    const checkBtnRef = useRef();\n    const forwardBtnRef = useRef();\n    const history = useHistory();\n\n    const checkAnswers = () => {\n        history.push({\n            pathname: '/results',\n            state: answers,\n        })\n    }\n\n    const goBack = () => {\n        setIndex(prevValue => prevValue - 1);\n    };\n    const goForward = () => {\n        setIndex(prevValue => prevValue + 1);\n    }\n\n    const updateAnswer = (answer) => {\n        let currentAnswers = [...answers];\n        currentAnswers[index] = answer;\n        if(currentAnswers.indexOf('') !== -1) {\n            checkBtnRef.current.classList.add('inactive')\n            checkBtnRef.current.disabled = true;\n        } else {\n            checkBtnRef.current.classList.remove('inactive')\n            checkBtnRef.current.disabled = false;\n        }\n        setAnswers(currentAnswers);\n    }\n\n    useEffect(() => {\n        checkBtnRef.current.classList.add('inactive');\n        checkBtnRef.current.disabled = true;\n    },[])\n\n    useEffect(() => {\n        if(index === 0) {\n            backBtnRef.current.classList.add('inactive');\n            backBtnRef.current.disabled = true;\n        } else if (index === guests.length - 1) {\n            forwardBtnRef.current.classList.add('inactive');\n            forwardBtnRef.current.disabled = true;\n        } else {\n            backBtnRef.current.classList.remove('inactive');\n            backBtnRef.current.disabled = false;\n            forwardBtnRef.current.classList.remove('inactive');\n            forwardBtnRef.current.disabled = false;\n        }\n    },[index]);\n\n    \n\n    return (\n        <div className=\"form\">\n            <h2>Nice to see you again!</h2>\n            <Question \n                currentAnswer={answers[index]} \n                picture={guests[index].picture.large} \n                updateAnswer={updateAnswer}\n            />                       \n            <button onClick={goBack} ref={backBtnRef}>{back}</button>\n            <button onClick={goForward} ref={forwardBtnRef} >{forward}</button>\n            <button onClick={checkAnswers} ref={checkBtnRef}>{check}</button>\n        </div>\n    )\n}\n\nexport default Form;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../styles/Guest.css';\n\nconst Guest = ({num, numPeopleToGuess, person, time}) => {\n\n    const { name, picture } = person;\n\n    const animationVariable = {\n        animationDuration: `${time}ms`,\n        animationIterationCount: numPeopleToGuess,\n    }\n\n    const [welcomeText, setWelcomeText] = useState();\n    \n    const history = useHistory();\n\n    const randomWelcomeText = (name) => {\n        const texts = [\n            `Hi, I'am ${name}`,\n            `Hello, I'am ${name}`,\n            `I'am ${name}, nice to see you!`,\n            `Pleased to see you, I'am ${name}`,\n            `Welcome to the party, I'am ${name}`,\n            `I'am ${name}, nice to meet you!`\n        ]\n        const randomIndex = (Math.floor(Math.random() * texts.length));\n        return texts[randomIndex];\n    }\n\n    useEffect(() => \n        { \n            setWelcomeText(randomWelcomeText(name.first));\n            if(num === numPeopleToGuess - 1) {\n                setTimeout(() => history.push({\n                    pathname: '/info',\n                    state: {\n                        text: 'Are you ready to check your memory?',\n                        type: 'info',\n                    }\n                }),time)\n            }\n        },[person])\n\n    return (\n        <div className=\"guest\">\n            <h2>Greetings</h2>\n            <p>{`Guest ${num} of ${numPeopleToGuess}`}</p>\n            <img src={picture.large} alt=\"face\"></img>\n            <p>{welcomeText}</p>\n            <div className=\"progress\">\n                <p style={animationVariable}></p>\n            </div>\n        </div>\n    )\n}\n\nexport default Guest","import React, { useContext, useEffect, useState } from 'react';\n\nimport Guest from './Guest';\n\nimport '../styles/Greetings.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { MainContext } from './MainContext';\n\nconst API = \"https://randomuser.me/api/?nat=us,gb,ca&inc=name,picture&results=\";\n\nconst Greetings = (props) => {\n\n    const { guests, lapseOfTime } = useContext(MainContext);\n    const history = useHistory();\n    const { numOfPeopleToGuess } = useParams();\n    const [ordinalNum, setOrdinalNum] = useState(0);\n    const [personToPresent, setPersonToPresent] = useState();\n\n    const handleDataFetch = () => {\n        fetch(`${API}${numOfPeopleToGuess}`)\n        .then(response => {\n            if(response.ok) return response;\n            throw Error();\n        })\n        .then(response => response.json())\n        .then(data => props.provideDataForMainContext(data.results))\n        .catch(() => history.push({\n            pathname: 'info',\n            state: {\n                type: 'error',\n                text: 'I regret to say that something went wrong. Try to once again later.'\n            }\n        }))     \n    }\n    \n    useEffect(()=> {\n        handleDataFetch();\n    },[])\n\n    useEffect(() => {\n        if(typeof guests !== 'undefined') \n        {   \n            let index = 0;\n            const intervalId = setInterval(\n                () => {\n                    setPersonToPresent(guests[index++]);\n                    setOrdinalNum(prevNum => prevNum + 1);\n                }\n            ,lapseOfTime);\n            setTimeout(() => clearInterval(intervalId), (numOfPeopleToGuess + 1) * lapseOfTime);\n            return () => clearInterval(intervalId);\n            // setPersonToPresent(guests[0]);\n        }\n    },[guests]);\n\n    return (\n        <div className=\"greetings\">\n            {typeof personToPresent !== 'undefined' \n                ?  <Guest \n                    num={ordinalNum}\n                    numPeopleToGuess={numOfPeopleToGuess} \n                    person={personToPresent} \n                    time={lapseOfTime}\n                  />\n                : 'Please, wait for a while...'\n            }\n        </div>\n    )\n}\n\nexport default Greetings;","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport '../styles/Info.css';\nimport { useHistory } from 'react-router-dom';\n\n\nconst back = <FontAwesomeIcon icon={faArrowAltCircleLeft} />\nconst check = <FontAwesomeIcon icon={faCheckCircle} />\n\nconst Info = (props) => {\n\n    const {text, type} = props.location.state;\n    const history = useHistory();\n\n    const handleBackBtn = () => history.push({pathname: '/'});\n    const handleCheckBtn = () => history.push({pathname: '/form'});\n\n    const configureButtons = (type) => {\n        if(type === 'info') {\n            return (\n                <>\n                    <button onClick={handleBackBtn}>{back}</button>\n                    <button onClick={handleCheckBtn}>{check}</button>\n                </>\n            )\n        } else if (type === 'error') {\n            return  <button onClick={handleBackBtn}>{back}</button>\n        }\n    }\n\n    return (\n        <div className=\"info\">\n            <p>{text}</p>\n            {configureButtons(type)}\n        </div>\n    )\n}\n\nexport default Info;","import React, { useContext, useEffect, useState } from 'react';\nimport { MainContext } from './MainContext';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrownOpen, faGrin, faRedoAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Results.css';\n\nconst badAnswersIcon = <FontAwesomeIcon icon={faFrownOpen}/>\nconst goodAnswersIcon = <FontAwesomeIcon icon={faGrin}/>\nconst tryAgain = <FontAwesomeIcon icon={faRedoAlt}/>\n\nconst Results = (props) => {\n\n    const answers  = props.location.state;\n    const [badAnswersScore, setBadAnswersScore] = useState(0);\n    const [goodAnswersScore, setGoodAnswersScore] = useState(0);\n    const { guests } = useContext(MainContext);\n    const history = useHistory();\n\n    const showResults = () => {       \n        let color = '';\n        return guests.map((guest,index) => {\n            guest.name.first === answers[index]\n            ? color = 'yellowgreen'\n            : color = 'tomato'\n            const borderColor = {borderColor: `${color}`};\n            return (\n                <li key={index}>\n                    <img alt='face' src={guest.picture.medium} style={borderColor}/>\n                    <p>{guest.name.first}</p>\n                    <p>{answers[index]}</p>\n                </li>\n            )\n        })\n    }\n\n\n    const countScores = () => {\n        let badAnswers = 0;\n        let goodAnswers = 0;\n        guests.map((guest,index) => (guest.name.first === answers[index]? goodAnswers += 1: badAnswers += 1))\n        setBadAnswersScore(badAnswers);\n        setGoodAnswersScore(goodAnswers);\n    }\n\n\n    const handleTryAgainBtn = () => {\n        history.push({\n            pathname: '/',\n        })\n    }\n\n    useEffect(() => {\n        countScores()\n    },[]);\n\n    return (\n        <div className=\"results\">\n            <div className=\"summary\">\n                <div>\n                    <p>{badAnswersIcon}</p>\n                    <p>{badAnswersScore}</p>\n                </div>\n                <div>\n                    <p>{goodAnswersIcon}</p>\n                    <p>{goodAnswersScore}</p>\n                </div>\n            </div>\n            <ul className=\"answers\">\n                {showResults()}\n            </ul>\n            <button onClick={handleTryAgainBtn}>{tryAgain}</button>\n        </div>\n    )\n\n}\n\nexport default Results;","import React, { useRef } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft, faCheckCircle, faStopwatch } from '@fortawesome/free-solid-svg-icons';\n\nimport '../styles/Settings.css';\nimport { useHistory } from 'react-router-dom';\n\nconst back = <FontAwesomeIcon icon={faArrowAltCircleLeft} />\nconst save = <FontAwesomeIcon icon={faCheckCircle} />\nconst timer = <FontAwesomeIcon icon={faStopwatch}/>\n\nconst Settings = (props) => {\n\n    const history = useHistory();\n    const indicatorRef = useRef();\n    let mouseOver= false;\n    const stripRef = useRef();\n    \n    const handleBackBtn = () => history.push({pathname: '/'});\n\n    const handleMouseMove = (event) => {\n       mouseOver = true;\n    }\n\n    const handleOnClick = (event) => {\n        let element = event.target;\n        if (element.className === 'indicator') element = element.parentElement;\n        const rect = element.getBoundingClientRect();\n        const stripWidth = rect.width;\n        if(mouseOver) {\n            const offsetX = event.clientX - rect.left;\n            if (offsetX > 0.15 * stripWidth && offsetX < 0.25 * stripWidth) {\n                indicatorRef.current.style = 'left: 15%';\n                props.provideTimeFromSettings(3000);\n            }\n            else if (offsetX > 0.45 * stripWidth && offsetX < 0.55 * stripWidth) {\n                indicatorRef.current.style = 'left: 45%';\n                props.provideTimeFromSettings(5000);\n            } \n            else if (offsetX > 0.75 * stripWidth && offsetX < 0.85 * stripWidth) {\n                indicatorRef.current.style = 'left: 75%';\n                props.provideTimeFromSettings(7000);\n            }\n        }\n    }\n\n    const handleSaveBtn = () => history.push({pathname: '/'})\n\n    return (\n        <div className=\"settings\">\n            <h2>Settings</h2>\n            <div className=\"explanation\">Hereunder you can set how long greeting the guest will last.</div>\n            <div className=\"timer\">\n                <div className=\"icon\">{timer}</div>\n                <div className=\"strip\" onClick={handleOnClick} onMouseMove={handleMouseMove} ref={stripRef}>\n                    <p className=\"indicator\" ref={indicatorRef}/>\n                    <p>3s</p>\n                    <p>5s</p>\n                    <p>7s</p>\n                </div>\n            </div>\n            <div>\n                <button onClick={handleBackBtn}>{back}</button>\n                <button onClick={handleSaveBtn}>{save}</button>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Settings;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useRef } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport '../styles/StartPage.css';\n\nconst settingsBtn = <FontAwesomeIcon icon={faCog}/>\n\nconst StartPage = (props) => {\n\n    const[numOfPeopleToGuess, setNumOfPeopleToGuess] = useState(5);\n    const easyBtnRef = useRef();\n    const mediumBtnRef = useRef();\n    const hardBtnRef = useRef();\n    const difficultyBtnRefList = [easyBtnRef,mediumBtnRef,hardBtnRef];\n    const history = useHistory();\n    const time = props.location.state === undefined ? 3000 : props.location.state;\n\n    const chooseDifficulty = (event) => {\n        const level = event.target.dataset.difficulty;\n        difficultyBtnRefList.forEach(btn => {\n            const currentElem = btn.current;\n            currentElem.dataset.difficulty === level\n                ? currentElem.classList.add('choosen')\n                : currentElem.classList.remove('choosen')\n        });\n        \n        switch (level) {\n            case 'easy':\n                return setNumOfPeopleToGuess(5);\n            case 'medium':\n                return setNumOfPeopleToGuess(10);\n            case 'hard':\n                return setNumOfPeopleToGuess(15);\n            default:\n                return setNumOfPeopleToGuess(5);\n        };\n    }\n\n    const openSettings = () => history.push({pathname: '/settings'})\n\n    const runGreetings = () => history.push({\n        pathname: `/greetings/${numOfPeopleToGuess}`,\n        state: time,\n    })\n\n    return (\n       \n        <div className=\"startPage\">\n            <div className=\"description\">\n                <p>Try to imagine, that you are at the big party. Because of your famous a lot of people want to know you. Are you able to remember their names? Let's check it!</p>\n            </div>\n            <section className=\"buttons\">\n                <div className=\"firstBtnGroup\">\n                    <div>\n                        <button \n                            className='choosen' \n                            data-difficulty='easy' \n                            onClick={chooseDifficulty} \n                            ref={easyBtnRef}\n                        >\n                            Easy\n                        </button>\n                        <p>up to 5</p>\n                    </div>\n                    <div>\n                        <button \n                            data-difficulty='medium' \n                            onClick={chooseDifficulty} \n                            ref={mediumBtnRef}\n                        >\n                            Medium\n                        </button>\n                        <p>up to 10</p>\n                    </div>                    \n                    <div>\n                        <button \n                            data-difficulty='hard' \n                            onClick={chooseDifficulty} \n                            ref={hardBtnRef}\n                        >\n                            Hard\n                        </button>\n                        <p>up to 15</p>\n                    </div>\n                </div>\n                <div className=\"secondBtnGroup\">\n                    <button onClick={openSettings}>{settingsBtn}</button>\n                    <button onClick={runGreetings}>Start</button>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default StartPage;","import React, { useState } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport Form from '../components/Form';\nimport Greetings from '../components/Greetings';\nimport Info from '../components/Info';\nimport { MainContext } from '../components/MainContext';\nimport Results from '../components/Results';\nimport Settings from '../components/Settings';\nimport StartPage from '../components/StartPage';\n\nconst Main = () => {\n\n    const [mainContext, setMainContext] = useState();\n    const [time, setTime] = useState(3000);\n\n    const provideDataForMainContext = (data) => setMainContext(data);\n    const provideTimeFromSettings = (time) => setTime(time);\n\n    return (\n        <main>   \n            <MainContext.Provider value={{guests: mainContext, lapseOfTime: time}}>\n                <Route path=\"/\" exact component={StartPage}/>\n                <Route path=\"/form\" component={Form}/>        \n                <Route \n                    path=\"/greetings/:numOfPeopleToGuess\" \n                    render={() => <Greetings provideDataForMainContext={provideDataForMainContext}/>}\n                />\n                <Route path=\"/info\" component={Info}/>\n                <Route path=\"/results\" component={Results}/>\n                <Route \n                    path=\"/settings\" \n                    render={() => <Settings provideTimeFromSettings={provideTimeFromSettings}/>}\n                />\n            </MainContext.Provider>  \n        </main>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Footer from './layouts/Footer';\nimport Header from './layouts/Header';\nimport Main from './layouts/Main';\n\nimport './styles/App.css'\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <Header/>\n        <Main/>\n        <Footer/>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}